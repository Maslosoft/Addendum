<?php

/**
 * Container for method metadata generated by method annotations
 *
 * @author Piotr
 */
class EComponentMetaMethod
{
	/**
	 * Name of method
	 * @var string
	 */
	public $name = '';

	/**
	 * Indicates if method is abstract
	 * @var bool
	 */
	public $isAbstract = false;

	/**
	 * Class constructor, set some basic metadata
	 * @param ReflectionMethod $info
	 */
	public function __construct(ReflectionMethod $info = null)
	{
		// For internal use
		if(null === $info)
		{
			return;
		}
		$this->name = $info->name;
		$this->isAbstract = $info->isAbstract();
	}

	public static function __set_state($data)
	{
		$obj = new self(null);
		foreach($data as $field => $value)
		{
			$obj->$field = $value;
		}
		return $obj;
	}
}