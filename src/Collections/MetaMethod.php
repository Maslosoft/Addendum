<?php

namespace Maslosoft\Addendum\Collections;

use Maslosoft\Addendum\Interfaces\IAnnotationEntity;
use ReflectionMethod;

/**
 * Container for method metadata generated by method annotations
 *
 * @author Piotr
 */
class MetaMethod implements IAnnotationEntity
{

	/**
	 * Name of method
	 * @var string
	 */
	public $name = '';

	/**
	 * Indicates if method is abstract
	 * @var bool
	 */
	public $isAbstract = false;

	/**
	 * Indicates if method is static
	 * @var bool
	 */
	public $isStatic = false;

	/**
	 * Class constructor, set some basic metadata
	 * @param ReflectionMethod $info
	 */
	public function __construct(ReflectionMethod $info = null)
	{
		// For internal use
		if (null === $info)
		{
			return;
		}
		$this->name = $info->name;
		$this->isAbstract = $info->isAbstract();
		$this->isStatic = $info->isStatic();
	}

	public function __get($name)
	{
		return null;
	}
}
